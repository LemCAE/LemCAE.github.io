<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>GitHub Action笔记</title>
    <link href="/2024/08/17/GitHub-Action%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/08/17/GitHub-Action%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>这是一篇关于GitHub Action的笔记！</p><h2 id="关于GitHub-Action"><a href="#关于GitHub-Action" class="headerlink" title="关于GitHub Action"></a>关于GitHub Action</h2><blockquote><p>GitHub Actions is a continuous integration and continuous delivery (CI&#x2F;CD) platform that allows you to automate your build, test, and deployment pipeline. You can create workflows that build and test every pull request to your repository, or deploy merged pull requests to production.</p><p>GitHub Actions goes beyond just DevOps and lets you run workflows when other events happen in your repository. For example, you can run a workflow to automatically add the appropriate labels whenever someone creates a new issue in your repository.</p><p>GitHub provides Linux, Windows, and macOS virtual machines to run your workflows, or you can host your own self-hosted runners in your own data center or cloud infrastructure.</p><p><em>GitHub Actions 是一个持续集成和持续交付 （CI&#x2F;CD） 平台，可用于自动化构建、测试和部署管道。您可以创建工作流来构建和测试对存储库的每个拉取请求，或将合并的拉取请求部署到生产环境。</em></p><p><em>GitHub Actions 不仅仅局限于 DevOps，还允许您在仓库中发生其他事件时运行工作流。例如，您可以运行工作流，以便在有人在您的仓库中创建新问题时自动添加适当的标签。</em></p><p><em>GitHub 提供 Linux、Windows 和 macOS 虚拟机来运行您的工作流，或者您可以在自己的数据中心或云基础设施中托管自己的自托管运行器。</em></p></blockquote><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><h3 id="创建workflow文件"><a href="#创建workflow文件" class="headerlink" title="创建workflow文件"></a>创建workflow文件</h3><p>workflow文件是操作执行的依据，其中规定了工作流名称、触发事件、运行平台以及运行操作。文件应被保存于 <code>.github/workflows</code>目录下。文件的名称没有特殊限制，但是文件类型必须是 <code>yml</code>。</p><p>workflow文件的基本格式如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">EXE</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span> [<span class="hljs-string">main</span>]<br>  <span class="hljs-attr">pull_request:</span><br>    <span class="hljs-attr">branches:</span> [<span class="hljs-string">main</span>]<br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">windows-latest</span><br><br>    <span class="hljs-attr">steps:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Check</span> <span class="hljs-string">out</span> <span class="hljs-string">the</span> <span class="hljs-string">repository</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v4</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Set</span> <span class="hljs-string">up</span> <span class="hljs-string">Python</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-python@v3</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">python-version:</span> <span class="hljs-number">3.11</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">dependencies</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        python -m pip install --upgrade pip</span><br><span class="hljs-string">        pip install pyinstaller pillow</span><br><span class="hljs-string"></span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">EXE</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        pyinstaller --onefile --windowed pic-to-pdf.py</span><br><span class="hljs-string">        mkdir output</span><br><span class="hljs-string">        move dist\pic-to-pdf.exe output\pic-to-pdf.exe</span><br><span class="hljs-string"></span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Upload</span> <span class="hljs-string">EXE</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/upload-artifact@v2</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">pic-to-pdf_exe</span><br>        <span class="hljs-attr">path:</span> <span class="hljs-string">output/pic-to-pdf.exe</span><br></code></pre></td></tr></table></figure><p><code>name</code>：规定工作流的名称</p><p><code>on</code>：规定工作流的触发事件，上例中为 <code>main</code>分支上有 <code>push</code>及 <code>pull_requst</code>活动时触发</p><p>　　<a href="https://docs.github.com/zh/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows">查看所有事件类型</a></p><p><code>jobs</code>：规定工作流的具体操作</p><p>　　在 <code>jobs</code>板块下还存在多个子目：</p><p>　　　　<code>build</code>：是这一段操作的名称（当然上例中也只有一段操作）</p><p>　　　　　　<code>runs-on</code>：规定下面的操作的运行平台，上例中为 <code>windows-latest</code>（<a href="https://docs.github.com/zh/actions/writing-workflows/choosing-where-your-workflow-runs/choosing-the-runner-for-a-job">查看所有运行平台</a>）</p><p>　　　　　　<code>steps</code>：规定具体操作：</p><p>　　　　　　　　所有的 <code>name</code>标签都是对这一步操作的描述</p><p>　　　　　　　　<code>Check out the repository</code>：使用 <code>actions/checkout@v4</code>检查代码库</p><p>　　　　　　　　<code>Set up Python</code>：安装Python环境。使用官方 <code>actions/setup-python@v3</code>工具，并通过 <code>with</code>标签指定Python版本为3.11</p><p>　　　　　　　　<code>Install dependencies</code>：安装依赖。这里的 <code>run</code>下面就直接是具体的命令行操作了</p><p>　　　　　　　　<code>Build EXE</code>：打包exe文件</p><p>　　　　　　　　<code>Upload EXE</code>：上传exe文件。使用 <code>actions/upload-artifact@v2</code>操作来上传构建好的EXE文件，文件名为 <code>pic-to-pdf_exe</code>，上传到名为 <code>output</code>的目录下。（这之后就可以在对应 <code>action</code>的 <code>Artifacts</code>中找到并下载文件了）</p><h3 id="触发GitHub-Action"><a href="#触发GitHub-Action" class="headerlink" title="触发GitHub Action"></a>触发GitHub Action</h3><p>每当定义的事件发生时，workflow文件设定的工作流程就会自动进行，不需要额外操作</p><h2 id="更多操作"><a href="#更多操作" class="headerlink" title="更多操作"></a>更多操作</h2><h3 id="自动将文件发布到GitHub-Relese"><a href="#自动将文件发布到GitHub-Relese" class="headerlink" title="自动将文件发布到GitHub Relese"></a>自动将文件发布到GitHub Relese</h3><p>示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">and</span> <span class="hljs-string">Release</span> <span class="hljs-string">EXE</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">tags:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;v*&#x27;</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">windows-latest</span><br><br>    <span class="hljs-attr">steps:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Checkout</span> <span class="hljs-string">code</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v3</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Set</span> <span class="hljs-string">up</span> <span class="hljs-string">Python</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-python@v4</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">python-version:</span> <span class="hljs-string">&#x27;3.x&#x27;</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">dependencies</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">pip</span> <span class="hljs-string">install</span> <span class="hljs-string">-r</span> <span class="hljs-string">requirements.txt</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">EXE</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">pyinstaller</span> <span class="hljs-string">--onefile</span> <span class="hljs-string">--noconsole</span> <span class="hljs-string">pic-to-pdf.py</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Archive</span> <span class="hljs-string">EXE</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/upload-artifact@v3</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">pic-to-pdf-exe</span><br>        <span class="hljs-attr">path:</span> <span class="hljs-string">dist/pic-to-pdf.exe</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Create</span> <span class="hljs-string">GitHub</span> <span class="hljs-string">Release</span><br>      <span class="hljs-attr">id:</span> <span class="hljs-string">create_release</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/create-release@v1</span><br>      <span class="hljs-attr">env:</span><br>        <span class="hljs-attr">GITHUB_TOKEN:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITHUB_TOKEN</span> <span class="hljs-string">&#125;&#125;</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">tag_name:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.ref</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">release_name:</span> <span class="hljs-string">Release</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">github.ref</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">draft:</span> <span class="hljs-literal">false</span><br>        <span class="hljs-attr">prerelease:</span> <span class="hljs-literal">false</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Upload</span> <span class="hljs-string">EXE</span> <span class="hljs-string">to</span> <span class="hljs-string">Release</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/upload-release-asset@v1</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">upload_url:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">steps.create_release.outputs.upload_url</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">asset_path:</span> <span class="hljs-string">dist/pic-to-pdf.exe</span><br>        <span class="hljs-attr">asset_name:</span> <span class="hljs-string">pic-to-pdf.exe</span><br>        <span class="hljs-attr">asset_content_type:</span> <span class="hljs-string">application/octet-stream</span><br><br></code></pre></td></tr></table></figure><p>这里，工作流被设定为在有新版本时才触发（通过检查推送时的 <code>tag</code>，例如，每次推送时执行<code>git tag v1.0.0</code>及<code>git push main v1.0.0</code>）<br><code>Create GitHub Release</code>：创建 GitHub Release，使用当前的标签作为版本号。<br><code>Upload EXE to Release</code>：将生成的 exe 文件上传到刚刚创建的 Release 中。当然，有多种发布Relese的方式，如<a href="https://github.com/marketplace/actions/upload-to-release">Upload to Release</a><br>其中，<code>GITHUB_TOKEN</code>为GitHub提供的自动化token，用于发布和上传资源到Release。</p>]]></content>
    
    
    <categories>
      
      <category>其它</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML基本笔记</title>
    <link href="/2024/08/11/HTML%E5%9F%BA%E6%9C%AC%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/08/11/HTML%E5%9F%BA%E6%9C%AC%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>这里主要记录一些HTML中的方法和分析！</p><h2 id="CSS-Style类型"><a href="#CSS-Style类型" class="headerlink" title="CSS Style类型"></a>CSS Style类型</h2><h3 id="背景图片的设置"><a href="#背景图片的设置" class="headerlink" title="背景图片的设置"></a>背景图片的设置</h3><p>一般来说，网页背景图片是设置成居中、铺满且不重复的。要达到这一点，可以在css里面设置：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">body</span> &#123;<br><span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">url</span>();<br><span class="hljs-attribute">background-size</span>: cover;<br><span class="hljs-attribute">background-position</span>: center;<br><span class="hljs-attribute">background-repeat</span>: no-repeat;<br>&#125;<br></code></pre></td></tr></table></figure><p>其中，<code>background-image: url()</code>指定了背景图片的位置，<code>background: cover</code>使得背景图片<strong>在保留宽高比</strong>的情况下<strong>缩放至铺满页面</strong>，<code>background-position: center</code>和 <code>background-repeat: no-repeat</code>则分别使背景居中和不重复。</p><h3 id="多个元素的排序"><a href="#多个元素的排序" class="headerlink" title="多个元素的排序"></a>多个元素的排序</h3><p>在排列一些内容或链接时，经常希望他们可以按行列规律排序，这里主要使用 <code>display: flex</code>属性达到这一效果：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.container</span>&#123;<br><span class="hljs-attribute">display</span>: flex;<br><span class="hljs-attribute">flex-wrap</span>: wrap;<br><span class="hljs-attribute">align-items</span>: center;<br><span class="hljs-attribute">justify-content</span>: space-around;<br>&#125;<br></code></pre></td></tr></table></figure><p>从上到下作用依次为：</p><ul><li>使用 <code>flex</code>布局方式（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox">补充资料</a>）</li><li>实现多行flex容器</li><li>使元素以中心对齐</li><li>自动分配子元素的空间使其在一行上均匀分布</li></ul><h2 id="JS-Script类型"><a href="#JS-Script类型" class="headerlink" title="JS Script类型"></a>JS Script类型</h2><h3 id="对键盘-鼠标输入的检测"><a href="#对键盘-鼠标输入的检测" class="headerlink" title="对键盘&#x2F;鼠标输入的检测"></a>对键盘&#x2F;鼠标输入的检测</h3><p>JavaScript中可以使用 <code>addEventListener()</code>函数添加对键盘输入的监听。例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;keydown&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>) &#123;<br><span class="hljs-keyword">if</span> (event.<span class="hljs-property">keyCode</span> === <span class="hljs-number">109</span> || event.<span class="hljs-property">keyCode</span> === <span class="hljs-number">77</span>) &#123;<br><span class="hljs-title function_">changeMenuShow</span>()<br>&#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p>其中， <code>keyCode === 77</code>分别对应 <code>m</code>和 <code>M</code>的输入，<code>ChangeMenuShow()</code>即为按键按下后要执行的函数。</p><details><summary><strong>keyCode对应表</strong></summary><table><thead><tr><th>keyCode</th><th>对应按键</th></tr></thead><tbody><tr><td>8</td><td>BackSpace</td></tr><tr><td>9</td><td>Tab</td></tr><tr><td>12</td><td>Clear</td></tr><tr><td>13</td><td>Enter</td></tr><tr><td>16</td><td>Shift_L</td></tr><tr><td>17</td><td>Control_L</td></tr><tr><td>18</td><td>Alt_L</td></tr><tr><td>19</td><td>Pause</td></tr><tr><td>20</td><td>Caps_Lock</td></tr><tr><td>27</td><td>Esc Escape</td></tr><tr><td>32</td><td>Space</td></tr><tr><td>33</td><td>Page Up</td></tr><tr><td>34</td><td>Page Down</td></tr><tr><td>35</td><td>End</td></tr><tr><td>36</td><td>Home</td></tr><tr><td>37</td><td>Left Arrow</td></tr><tr><td>38</td><td>Up Arrow</td></tr><tr><td>39</td><td>Right Arrow</td></tr><tr><td>40</td><td>Down Arrow</td></tr><tr><td>41</td><td>Select</td></tr><tr><td>42</td><td>Print</td></tr><tr><td>43</td><td>Execute</td></tr><tr><td>45</td><td>Insert</td></tr><tr><td>46</td><td>Delete</td></tr><tr><td>47</td><td>Help</td></tr><tr><td>48</td><td>0 )</td></tr><tr><td>49</td><td>1 !</td></tr><tr><td>50</td><td>2 @</td></tr><tr><td>51</td><td>3 #</td></tr><tr><td>52</td><td>4 $</td></tr><tr><td>53</td><td>5 %</td></tr><tr><td>54</td><td>6 ^</td></tr><tr><td>55</td><td>7 &</td></tr><tr><td>56</td><td>8 *</td></tr><tr><td>57</td><td>9 (</td></tr><tr><td>65</td><td>a A</td></tr><tr><td>66</td><td>b B</td></tr><tr><td>67</td><td>c C</td></tr><tr><td>68</td><td>d D</td></tr><tr><td>69</td><td>e E</td></tr><tr><td>70</td><td>f F</td></tr><tr><td>71</td><td>g G</td></tr><tr><td>72</td><td>h H</td></tr><tr><td>73</td><td>i I</td></tr><tr><td>74</td><td>j J</td></tr><tr><td>75</td><td>k K</td></tr><tr><td>76</td><td>l L</td></tr><tr><td>77</td><td>m M</td></tr><tr><td>78</td><td>n N</td></tr><tr><td>79</td><td>o O</td></tr><tr><td>80</td><td>p P</td></tr><tr><td>81</td><td>q Q</td></tr><tr><td>82</td><td>r R</td></tr><tr><td>83</td><td>s S</td></tr><tr><td>84</td><td>t T</td></tr><tr><td>85</td><td>u U</td></tr><tr><td>86</td><td>v V</td></tr><tr><td>87</td><td>w W</td></tr><tr><td>88</td><td>x X</td></tr><tr><td>89</td><td>y Y</td></tr><tr><td>90</td><td>z Z</td></tr><tr><td>96</td><td>KP_0</td></tr><tr><td>97</td><td>KP_1</td></tr><tr><td>98</td><td>KP_2</td></tr><tr><td>99</td><td>KP_3</td></tr><tr><td>100</td><td>KP_4</td></tr><tr><td>101</td><td>KP_5</td></tr><tr><td>102</td><td>KP_6</td></tr><tr><td>103</td><td>KP_7</td></tr><tr><td>104</td><td>KP_8</td></tr><tr><td>105</td><td>KP_9</td></tr><tr><td>106</td><td>KP_* KP_Multiply</td></tr><tr><td>107</td><td>KP_+ KP_Add</td></tr><tr><td>108</td><td>KP_Enter KP_Separator</td></tr><tr><td>109</td><td>KP_- KP_Subtract</td></tr><tr><td>110</td><td>KP_. KP_Decimal</td></tr><tr><td>111</td><td>KP_/ KP_Divide</td></tr><tr><td>112</td><td>F1</td></tr><tr><td>113</td><td>F2</td></tr><tr><td>114</td><td>F3</td></tr><tr><td>115</td><td>F4</td></tr><tr><td>116</td><td>F5</td></tr><tr><td>117</td><td>F6</td></tr><tr><td>118</td><td>F7</td></tr><tr><td>119</td><td>F8</td></tr><tr><td>120</td><td>F9</td></tr><tr><td>121</td><td>F10</td></tr><tr><td>122</td><td>F11</td></tr><tr><td>123</td><td>F12</td></tr><tr><td>124</td><td>F13</td></tr><tr><td>125</td><td>F14</td></tr><tr><td>126</td><td>F15</td></tr><tr><td>127</td><td>F16</td></tr><tr><td>128</td><td>F17</td></tr><tr><td>129</td><td>F18</td></tr><tr><td>130</td><td>F19</td></tr><tr><td>131</td><td>F20</td></tr><tr><td>132</td><td>F21</td></tr><tr><td>133</td><td>F22</td></tr><tr><td>134</td><td>F23</td></tr><tr><td>135</td><td>F24</td></tr><tr><td>136</td><td>Num_Lock</td></tr><tr><td>137</td><td>Scroll_Lock</td></tr><tr><td>187</td><td></td></tr><tr><td>188</td><td>,<</td></tr><tr><td>189</td><td>-_</td></tr><tr><td>190</td><td>.></td></tr><tr><td>191</td><td>/?</td></tr><tr><td>192</td><td>`~</td></tr><tr><td>210</td><td>plusminus hyphen macron</td></tr><tr><td>212</td><td>copyright registered</td></tr><tr><td>213</td><td>guillemotleft guillemotright</td></tr><tr><td>214</td><td>masculine ordfeminine</td></tr><tr><td>215</td><td>ae AE</td></tr><tr><td>216</td><td>cent yen</td></tr><tr><td>217</td><td>questiondown exclamdown</td></tr><tr><td>218</td><td>onequarter onehalf threequarters</td></tr><tr><td>219</td><td>[{</td></tr><tr><td>220</td><td>|</td></tr><tr><td>221</td><td>]}</td></tr><tr><td>222</td><td>'"</td></tr><tr><td>227</td><td>multiply division</td></tr><tr><td>228</td><td>acircumflex Acircumflex</td></tr><tr><td>229</td><td>ecircumflex Ecircumflex</td></tr><tr><td>230</td><td>icircumflex Icircumflex</td></tr><tr><td>231</td><td>ocircumflex Ocircumflex</td></tr><tr><td>232</td><td>ucircumflex Ucircumflex</td></tr><tr><td>233</td><td>ntilde Ntilde</td></tr><tr><td>234</td><td>yacute Yacute</td></tr><tr><td>235</td><td>oslash Ooblique</td></tr><tr><td>236</td><td>aring Aring</td></tr><tr><td>237</td><td>ccedilla Ccedilla</td></tr><tr><td>238</td><td>thorn THORN</td></tr><tr><td>239</td><td>eth ETH</td></tr><tr><td>240</td><td>diaeresis cedilla currency</td></tr><tr><td>241</td><td>agrave Agrave atilde Atilde</td></tr><tr><td>242</td><td>egrave Egrave</td></tr><tr><td>243</td><td>igrave Igrave</td></tr><tr><td>244</td><td>ograve Ograve otilde Otilde</td></tr><tr><td>245</td><td>ugrave Ugrave</td></tr><tr><td>246</td><td>adiaeresis Adiaeresis</td></tr><tr><td>247</td><td>ediaeresis Ediaeresis</td></tr><tr><td>248</td><td>idiaeresis Idiaeresis</td></tr><tr><td>249</td><td>odiaeresis Odiaeresis</td></tr><tr><td>250</td><td>udiaeresis Udiaeresis</td></tr><tr><td>251</td><td>ssharp question backslash</td></tr><tr><td>252</td><td>asciicircum degree</td></tr><tr><td>253</td><td>3 sterling</td></tr><tr><td>254</td><td>Mode_switch</td></tr></tbody></table></details><p>类似的，对鼠标点击的监听反应也可以使用 <code>addEventListener()</code>函数实现。例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> divElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;control-box&#x27;</span>);<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>) &#123;<br><span class="hljs-keyword">var</span> targetElement = event.<span class="hljs-property">target</span>;<br><span class="hljs-keyword">if</span> (!divElement.<span class="hljs-title function_">contains</span>(targetElement)) &#123;<br><span class="hljs-keyword">if</span> (divElement.<span class="hljs-property">style</span>.<span class="hljs-property">transform</span> != <span class="hljs-string">&#x27;translateX(90%)&#x27;</span>) &#123;<br>divElement.<span class="hljs-property">style</span>.<span class="hljs-property">transform</span> = <span class="hljs-string">&#x27;translateX(90%)&#x27;</span>;<br>&#125;<br>&#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p>其中，<code>event.target</code>返回<em>受点击元素</em>的所有内容，可以用以判断具体是哪个元素被点击了（就像上面那样）。</p><h3 id="倒计时"><a href="#倒计时" class="headerlink" title="倒计时"></a>倒计时</h3><p>JavaScript中，<code>setInterval()</code>函数提供了按照一定时间间隔执行指定函数的功能，而通过这个函数，便可以编写一个简单的倒计时：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> timecount<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">countdown</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">let</span> timeLeft = <span class="hljs-title function_">newTime</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;countdown&#x27;</span>).<span class="hljs-property">innerHTML</span>);<br>timeLeft -= <span class="hljs-number">1000</span>;<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;countdown&#x27;</span>).<span class="hljs-property">innerHTML</span> = <span class="hljs-string">`<span class="hljs-subst">$&#123;lastTime(timeLeft).hours.toString().padStart(<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;0&#x27;</span>)&#125;</span>:<span class="hljs-subst">$&#123;lastTime(timeLeft).minutes.toString().padStart(<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;0&#x27;</span>)&#125;</span>:<span class="hljs-subst">$&#123;lastTime(timeLeft).seconds.toString().padStart(<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;0&#x27;</span>)&#125;</span>`</span>;<br><span class="hljs-keyword">if</span> (timeLeft &lt;= <span class="hljs-number">3000</span> &amp;&amp; <span class="hljs-title function_">getSetTime</span>() &gt; <span class="hljs-number">3000</span>) &#123;<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;countdown&#x27;</span>).<span class="hljs-property">style</span>.<span class="hljs-property">color</span> = <span class="hljs-string">&#x27;#eb1515&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">if</span> (timeLeft &lt;= <span class="hljs-number">0</span>) &#123;<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;audio&#x27;</span>).<span class="hljs-title function_">play</span>();<br><span class="hljs-built_in">clearInterval</span>(timecount);<br>&#125;<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">startCountdown</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;audio&#x27;</span>).<span class="hljs-title function_">load</span>();<br><span class="hljs-keyword">let</span> timeLeft = <span class="hljs-title function_">getSetTime</span>();<br><span class="hljs-keyword">if</span> (timeLeft &gt; <span class="hljs-number">0</span>) &#123;<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;countdown&#x27;</span>).<span class="hljs-property">innerHTML</span> = <span class="hljs-string">`<span class="hljs-subst">$&#123;lastTime(timeLeft).hours.toString().padStart(<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;0&#x27;</span>)&#125;</span>:<span class="hljs-subst">$&#123;lastTime(timeLeft).minutes.toString().padStart(<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;0&#x27;</span>)&#125;</span>:<span class="hljs-subst">$&#123;lastTime(timeLeft).seconds.toString().padStart(<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;0&#x27;</span>)&#125;</span>`</span>;<br>timecount = <span class="hljs-built_in">setInterval</span>(countdown, <span class="hljs-number">1000</span>);<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;countdown&#x27;</span>).<span class="hljs-property">style</span>.<span class="hljs-property">color</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;请输入有效时间&#x27;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">pauseCountdown</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-built_in">clearInterval</span>(timecount);<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">resumeCountdown</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_">getSetTime</span>() &gt; <span class="hljs-number">0</span> &amp;&amp; timecount != <span class="hljs-literal">null</span> &amp;&amp; timecount &gt;= <span class="hljs-number">1000</span>) &#123;<br>timecount = <span class="hljs-built_in">setInterval</span>(countdown, <span class="hljs-number">1000</span>);<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;倒计时已结束或未开始&#x27;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">resetCountdown</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-built_in">clearInterval</span>(timecount);<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;countdown&#x27;</span>).<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&#x27;00:00:00&#x27;</span>;<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;countdown&#x27;</span>).<span class="hljs-property">style</span>.<span class="hljs-property">color</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;audio&#x27;</span>).<span class="hljs-title function_">load</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p>其中的核心部分是 <code>setInterval(countdown, 1000)</code>以及 <code>clearInterval(timecount)</code>。</p><p>在 <code>setInterval(countdown, 1000)</code>中，<code>countdown</code>是每过一段设定时间后执行的函数，<code>1000</code>则为指定的时间（单位ms）。在这段代码里是通过先设定一个时间数 <code>timeLeft</code>，并在每次函数执行时将其数值减去1000（单位均为ms）来达到倒计时的效果。<code>clearInterval(timecount)</code>则用于清除倒计时。</p><p>需要指出的是，上面代码中初始时间的获取是读取的一个内容形如 <code>hh:mm:ss</code>的 <code>&lt;p&gt;</code>元素达到的，而 <code>&lt;p&gt;</code>元素里的内容则通过一个读取 <code>&lt;input&gt;</code>控件数值的函数 <code>getSetTime()</code>获取（也用于判断设定时间以决定是否更改文本颜色）。</p><p><em>未完待续……</em></p>]]></content>
    
    
    <categories>
      
      <category>HTML</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
